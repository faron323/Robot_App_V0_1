#include "delta.h"

int pulPin[3] = {3,4,5};
int dirPin[3] = {23,25,27};
int enaPin[3] = {22,24,26};
int limPin[3] = {18,19,20};

float degreesPerStep[3] = {1.8, 1.8, 1.8};
float microstep[3] = {2,2,2};

// 90deg = 452.3

// Delta Arm Constants (in m)
float sideBase = 0.260; //base equilateral triangle side
float sidePlatform = 0.130; //platform equilateral triangle side
float upperLegLength = 0.220; //upper legs length
float lowerLegLength = 0.540; //lower legs parallelogram length 3*150 + 95
float lowerLegWidth = 0.095; //lower legs parallelogram width

float angles[3] = {90*M_PI/180,90*M_PI/180,90*M_PI/180}; //initial angles (radians)

DeltaArm delta(&angles, sideBase, sidePlatform, upperLegLength, lowerLegLength, lowerLegWidth);


void setup() {
		Serial.begin(115200);
		for(int i=0; i<3; i++) {
				degreesPerStep[i] = degreesPerStep[i] / microstep[i];
		}

		delta.initialize(pulPin, dirPin, enaPin, limPin, degreesPerStep, microstep);

		float anglesTemp[3] = {90*M_PI/180,90*M_PI/180,90*M_PI/180};
		delta.simplifiedFK(anglesTemp);

//                            0.452

// INITIAL POSITION NOT WORKING CORRECTLY WITH FIRST MOVE
		delta.moveToPosition(0,0,0.45226345);
		for(int i=0; i<3; i++) {
				Serial.println(angles[i] * 180/M_PI);
		}
		delay(5000);
		delta.moveToPosition(0,0,0.452);
		for(int i=0; i<3; i++) {
				Serial.println(angles[i] * 180/M_PI);
		}
		delay(5000);
		delta.moveToPosition(0,0,0.462);
		for(int i=0; i<3; i++) {
				Serial.println(angles[i] * 180/M_PI);
		}

		// delta.moveToPosition(0,0,-0.36);
		// delay(5000);
		//
		// delta.moveToPosition(0,0,-0.35);
}

void loop() {
}
